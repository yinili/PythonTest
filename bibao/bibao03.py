'''
闭包的简单应用
1、能够保存返回闭包时，外层函数变量值的状态
2、延长作用域

闭包的缺点：
1、变量作用域不直观
2、变量不会被垃圾回收，所以有一定的内存占用问题

总结：
1、闭包优化了变量，原来需要类对象完成的工作，闭包也可以完成
2、由于闭包引用了外部函数的局部变量，则外部函数的局部变量没有及时释放，会消耗内存
3、闭包的好处，使代码变得简洁便于阅读
4、闭包是理解装饰器的基础

'''


def bibao03():
    a = 100

    def inner_bibao0301():
        b = 90
        s = a+b
        print(s)

    def inner_bibao0302():
        inner_bibao0301()
        print('-------')

    return inner_bibao0302

x = bibao03()
x()